@page "/"
@inject IProductDataService _productDataService; 

<h3>Products</h3>

<TelerikGrid TItem="@Product"
             Class="overflow-auto mb-4"
             OnRead="@ReadItems"
             Pageable="true"
             Sortable="true"
             FilterMode="GridFilterMode.FilterMenu"
             Resizable="true"
             Reorderable="true"
             Height="600px"
             @bind-PageSize="PageSize"
             @ref="@Grid">
    <GridToolBar>
    <GridCommandButton Icon="@SvgIcon.Redo" OnClick="RefreshTable">Refresh</GridCommandButton>
    <GridCommandButton Command="ExcelExport" Icon="@SvgIcon.FileExcel">Export .xlsx</GridCommandButton>
    <GridCommandButton Command="CsvExport" Icon="@SvgIcon.FileCsv">Export .csv</GridCommandButton>
        <span class="k-toolbar-spacer"></span>
        <GridSearchBox />
    </GridToolBar>
    <GridExport>
        <GridExcelExport FileName="Users" AllPages="true" />
        <GridCsvExport FileName="Users" AllPages="true" />
    </GridExport>
    <GridSettings>
        <GridPagerSettings PageSizes="PageSizes" />
    </GridSettings>
    <GridColumns>
        <GridColumn Field="@nameof(Product.Id)" Width="70px" DisplayFormat="{0:N0}" />
        <GridColumn Field="@nameof(Product.Name)" />
        <GridColumn Field="@nameof(Product.Quantity)" Width="160px" />
        <GridColumn Field="@nameof(Product.OnSale)" Width="160px" />
        <GridColumn Field="@nameof(Product.Category)" Width="150px" />
        <GridColumn Field="@nameof(Product.Created)" Width="165px" />
    </GridColumns>
</TelerikGrid>

@code {
    private TelerikGrid<Product> Grid { get; set; }
    private int PageSize { get; set; } = 10;
    private List<int?> PageSizes = new List<int?> { 5, 10, 25, 50, null };

    private async Task ReadItems(GridReadEventArgs args)
    {
        var result = await _productDataService.GetProducts(args.Request);
        args.Data = result.Results;
        args.Total = result.Count;
    }

    private async Task RefreshTable()
    {
        Grid.Rebind();
    }
}
