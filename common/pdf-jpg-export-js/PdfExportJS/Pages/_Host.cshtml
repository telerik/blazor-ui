@page "/"
@namespace PdfExportJS.Pages
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>PdfExportJS</title>
    <base href="~/" />
    <link rel="stylesheet" href="css/bootstrap/bootstrap.min.css" />
    <link href="css/site.css" rel="stylesheet" />
    <link rel="stylesheet" href="_content/Telerik.UI.for.Blazor/css/kendo-theme-default/all.css" />
    <script src="_content/Telerik.UI.for.Blazor/js/telerik-blazor.js" defer></script>
</head>
<body>
    <app><component type="typeof(App)" render-mode="ServerPrerendered" /></app>

    <div id="blazor-error-ui">
        <environment include="Staging,Production">
            An error has occurred. This application may no longer respond until reloaded.
        </environment>
        <environment include="Development">
            An unhandled exception has occurred. See browser dev tools for details.
        </environment>
        <a href class="reload">Reload</a>
        <a class="dismiss">🗙</a>
    </div>

    <script src="_framework/blazor.server.js"></script>

    <!-- We need these two Kendo libs + Pako, delivered through LibMan in the project -->
    <script src="lib/progress/kendo-file-saver/dist/cdn/js/kendo-file-saver.js"></script>
    <script src="lib/progress/kendo-drawing/dist/cdn/js/kendo-drawing.js"></script>
    <script src="lib/pako/dist/pako.js"></script>

    <!-- telerikInterop.js surfaces the Kendo API to Blazor -->
    <script src="telerikInterop.js"></script>


</body>
</html>
